services:
  build:
    tty: true
    restart: "no"
    env_file:
      - .env.example
      - .env.versions.example
    environment:
      http_proxy: http://198.161.14.25:8080
      https_proxy: http://198.161.14.25:8080
      COMPOSER_MEMORY_LIMIT: -1
      COMPOSER_PROCESS_TIMEOUT: 2000
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_FROM_IMAGE: ${REPO:-}${IMAGE_REPO:-}${CRON_IMAGE:-php:8.3-cli}
        PHP_INI_ENVIRONMENT: ${PHP_INI_ENVIRONMENT:-production}
    links:
      - db
    volumes:
      - ./temp/var/www:/var/www:delegated
      - ./openshift/scripts/migrate-build-files.sh:/usr/local/bin/migrate-build-files.sh:ro
      - ./openshift/scripts/test-migration-complete.sh:/usr/local/bin/test-migration-complete.sh:ro
    command: /usr/local/bin/migrate-build-files.sh
    healthcheck:
      test: ["NONE"]
  db:
    image: ${DB_IMAGE:-mariadb:10}
    env_file:
      - .env.example
      - .env.versions.example
    environment:
      MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: YES
      MARIADB_DATABASE: ${DB_NAME:-performance}
      MARIADB_USER: ${DB_USER:-performance}
      MARIADB_PASSWORD: ${DB_PASSWORD:-performance}
      MARIADB_AUTO_UPGRADE: 1
    volumes:
      - mysqldata:/var/lib/mysql:delegated
      - ./temp/db-backups:/backups:delegated
    ports:
      - 3307:3306
    healthcheck:
      test: ["CMD-SHELL", "healthcheck.sh --innodb_initialized --connect"]
      interval: 10s
      timeout: 5s
      retries: 5
  php:
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true
    restart: "no"
    env_file:
      - .env.example
      - .env.versions.example
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=host.docker.internal client_port=9003
      PCC_ALLOW_IP: 127.0.0.1
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_FROM_IMAGE: ${REPO:-}${IMAGE_REPO:-}${PHP_IMAGE:-php:8.3-fpm}
        PHP_INI_ENVIRONMENT: ${PHP_INI_ENVIRONMENT:-production}
    volumes:
      - ./temp/var/www:/var/www:delegated
      - ./openshift/scripts/migrate-build-files.sh:/usr/local/bin/migrate-build-files.sh:ro
      - ./openshift/scripts/test-migration-complete.sh:/usr/local/bin/test-migration-complete.sh:ro
    command: php-fpm
    links:
      - db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    depends_on:
      php:
        condition: service_healthy
    image: ${WEB_IMAGE:-nginxinc/nginx-unprivileged:1.27.1-alpine-slim}
    ports:
      - "8080:8080"
    volumes:
      - ./config_pods/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./temp/var/www:/var/www:ro
    links:
      - php
    command: [nginx-debug, '-g', 'daemon off;']
  cron:
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.example
      - .env.versions.example
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DOCKER_FROM_IMAGE: ${REPO:-}${IMAGE_REPO:-}${PHP_IMAGE:-php:8.3-cli}
        PHP_INI_ENVIRONMENT: ${PHP_INI_ENVIRONMENT:-production}
    volumes:
      - ./temp/var/www:/var/www:delegated
    command: /usr/local/bin/cron.sh
  redis:
    image: ${REDIS_IMAGE:-redis:latest}
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    ports:
      - "6379:6379"
    volumes:
      - ./config_pods/redis/dokcer-redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./data/:/data
    command: [redis-server, /usr/local/etc/redis/redis.conf]
volumes:
  mysqldata: {}
