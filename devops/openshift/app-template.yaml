apiVersion: v1
kind: Template
metadata:
  name: ${NAME}
labels:
  project: ${PROJECT}
  service: ${SERVICE_NAME}
objects:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: ${NAME}
      labels:
        app: performance-docker-app
        app.kubernetes.io/component: performance-docker-app
        app.kubernetes.io/instance: performance-docker-app
    spec:
      replicas: "${{REPLICAS}}"
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          deployment: ${NAME}     
      strategy:
       rollingUpdate:
         maxSurge: 25%
         maxUnavailable: 25%
       type: RollingUpdate
      template:
        metadata:
          labels:
            deployment: ${NAME}
        spec:
          containers:
            - env:
                - name: PORT
                  value: "${PORT}"
              image: image-registry.openshift-image-registry.svc:5000/332842-dev/performance-docker-app
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: "${{PORT}}"
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
              readinessProbe:
                failureThreshold: 2
                httpGet:
                  path: /
                  port: "${{PORT}}"
                initialDelaySeconds: 10
                periodSeconds: 30
              livenessProbe:
                failureThreshold: 10
                httpGet:
                  path: /
                  port: "${{PORT}}"
                  scheme: HTTP
                initialDelaySeconds: 10
                periodSeconds: 30
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${NAME}
      labels:
        app: performance-docker-app
        app.kubernetes.io/component: performance-docker-app
        app.kubernetes.io/instance: performance-docker-app
    spec:
      ports:
        - name: http
          port: 8000
          targetPort: ${{PORT}}
      selector:
        deployment: ${NAME}
      type: ClusterIP
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: ${NAME}
      labels:
        app: performance-docker-app
        app.kubernetes.io/component: performance-docker-app
        app.kubernetes.io/instance: performance-docker-app
    spec:
      host: ${HOST_NAME}
      path: ${PATH}
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}
parameters:
  - name: NAME
    required: true
  - name: PROJECT 
    value: performance
  - name: SERVICE_NAME
    value: app
  - name: CPU_LIMIT
    value: "0.5"
  - name: MEMORY_LIMIT
    value: "256M"
  - name: CPU_REQUEST
    value: "0.1"
  - name: MEMORY_REQUEST
    value: "256M"
  - name: REPLICAS
    value: "2"
  - name: PORT
    value: "8000" 
  - name: BUILD_NAMESPACE
    required: true
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
  - name: PATH
    value: "/"
  - name: HOST_NAME
    required: true